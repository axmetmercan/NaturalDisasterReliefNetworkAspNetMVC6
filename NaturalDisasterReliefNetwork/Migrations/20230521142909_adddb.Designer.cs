// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NaturalDisasterReliefNetwork.Models;

#nullable disable

namespace NaturalDisasterReliefNetwork.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230521142909_adddb")]
    partial class adddb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NaturalDisasterReliefNetwork.Models.Addresses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CitiyId")
                        .HasColumnType("int");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("CountyId")
                        .HasColumnType("int");

                    b.Property<string>("FullAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CitiyId");

                    b.HasIndex("CountyId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("NaturalDisasterReliefNetwork.Models.AddressesHasTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<int?>("CountyId")
                        .HasColumnType("int");

                    b.Property<int>("addressId")
                        .HasColumnType("int");

                    b.Property<int>("typesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountyId");

                    b.HasIndex("addressId");

                    b.HasIndex("typesId");

                    b.ToTable("AddressesHasTypes");
                });

            modelBuilder.Entity("NaturalDisasterReliefNetwork.Models.Authority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CanList")
                        .HasColumnType("int");

                    b.Property<int>("CanPrepare")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Authority");
                });

            modelBuilder.Entity("NaturalDisasterReliefNetwork.Models.Categories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("NaturalDisasterReliefNetwork.Models.Cities", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("NaturalDisasterReliefNetwork.Models.Counties", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Counties");
                });

            modelBuilder.Entity("NaturalDisasterReliefNetwork.Models.Materials", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("NaturalDisasterReliefNetwork.Models.RequirementList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("Quantitiy")
                        .HasColumnType("int");

                    b.Property<int>("addressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("endDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("materialId")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<int>("userID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("addressId");

                    b.HasIndex("materialId");

                    b.HasIndex("userID");

                    b.ToTable("Requirements");
                });

            modelBuilder.Entity("NaturalDisasterReliefNetwork.Models.Types", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("NaturalDisasterReliefNetwork.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("authorityID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("authorityID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NaturalDisasterReliefNetwork.Models.Addresses", b =>
                {
                    b.HasOne("NaturalDisasterReliefNetwork.Models.Cities", "Citiy")
                        .WithMany()
                        .HasForeignKey("CitiyId");

                    b.HasOne("NaturalDisasterReliefNetwork.Models.Counties", "County")
                        .WithMany()
                        .HasForeignKey("CountyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Citiy");

                    b.Navigation("County");
                });

            modelBuilder.Entity("NaturalDisasterReliefNetwork.Models.AddressesHasTypes", b =>
                {
                    b.HasOne("NaturalDisasterReliefNetwork.Models.Cities", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("NaturalDisasterReliefNetwork.Models.Counties", "county")
                        .WithMany()
                        .HasForeignKey("CountyId");

                    b.HasOne("NaturalDisasterReliefNetwork.Models.Addresses", "address")
                        .WithMany()
                        .HasForeignKey("addressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NaturalDisasterReliefNetwork.Models.Types", "type")
                        .WithMany()
                        .HasForeignKey("typesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("address");

                    b.Navigation("county");

                    b.Navigation("type");
                });

            modelBuilder.Entity("NaturalDisasterReliefNetwork.Models.Counties", b =>
                {
                    b.HasOne("NaturalDisasterReliefNetwork.Models.Cities", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("NaturalDisasterReliefNetwork.Models.Materials", b =>
                {
                    b.HasOne("NaturalDisasterReliefNetwork.Models.Categories", "Categories")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categories");
                });

            modelBuilder.Entity("NaturalDisasterReliefNetwork.Models.RequirementList", b =>
                {
                    b.HasOne("NaturalDisasterReliefNetwork.Models.Addresses", "Addresses")
                        .WithMany()
                        .HasForeignKey("addressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NaturalDisasterReliefNetwork.Models.Materials", "Materials")
                        .WithMany()
                        .HasForeignKey("materialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NaturalDisasterReliefNetwork.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Addresses");

                    b.Navigation("Materials");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NaturalDisasterReliefNetwork.Models.User", b =>
                {
                    b.HasOne("NaturalDisasterReliefNetwork.Models.Authority", "authority")
                        .WithMany()
                        .HasForeignKey("authorityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("authority");
                });
#pragma warning restore 612, 618
        }
    }
}
